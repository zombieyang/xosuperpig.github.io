{"pageProps":{"markdown":"![Logo](./doc/pic/puerts_logo.png)\n\n[![license](https://img.shields.io/badge/license-BSD_3_Clause-blue.svg)](https://github.com/Tencent/puerts/blob/master/LICENSE)\n[![unreal](https://img.shields.io/badge/unreal-v1.0.1-blue.svg)](https://github.com/Tencent/puerts/releases/tag/Unreal_v1.0.1)\n[![unity](https://img.shields.io/badge/unity-v1.3.6-blue.svg)](doc/unity/install.md)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-blue.svg)](https://github.com/Tencent/puerts/pulls)\n![CI](https://github.com/Tencent/puerts/workflows/CI/badge.svg)\n\n## What？\n \n> in English\n\npuerts is a TypeScript programming solution within game engines.\n* provides a JavaScript Runtime\n\n* allows TypeScript to access the host engine（module-binding on the JavaScript level and generating TypeScript declarations）\n\n> 说中文\n\npuerts是游戏引擎下的TypeScript编程解决方案\n* 提供了一个JavaScript运行时\n\n* 提供通过TypeScript访问宿主引擎的能力（JavaScript层面的绑定以及TypeScript声明生成）\n \n\n## Why?\n\n> in English\n* Facililates game building processes by combining JavaScript packages and toolchains with the rendering power of professional game engines\n\n* In contrast to lua script, TypeScript supports static type checking, which significantly improves code robustness and maintainability.\n\n* High efficiency: supports reflection binding throughout the platform (engine) - no extra steps (code generation) needed for development.\n\n* High performance：supports static binding throughout the platform (engine) - takes care of complex scenes\n\n> 说中文\n* JavaScript生态有众多的库和工具链，结合专业商业引擎的渲染能力，快速打造游戏\n\n* 相比游戏领域常用的lua脚本，TypeScript的静态类型检查有助于编写更健壮，可维护性更好的程序\n\n* 高效：全引擎，全平台支持反射Binding，无需额外（生成代码）步骤即可开发\n\n* 高性能：全引擎，全平台支持静态Binding，兼顾了高性能的场景\n\n---\n\n## How to Install | 最新版本安装\n\n* [unreal](doc/unreal/install.md)\n* [unity](doc/unity/install.md)\n\n### Changelog\n\n* [unreal](doc/unreal/changelog.md)\n* [unity](doc/unity/changelog.md)\n\n### Known issues | 已知问题与解决办法\n\n* [unreal](doc/unreal/bugs.md)\n* [unity](doc/unity/bugs.md)\n\n---\n\n## Code Sample | 编程样例\n\n> Unity\n\n```typescript\nimport {UnityEngine} from 'csharp'\n\nUnityEngine.Debug.Log('hello world');\nlet gameObject = new UnityEngine.GameObject(\"testobject\");\nconsole.log(gameObject.name);\ngameObject.transform.position = new UnityEngine.Vector3(1, 2, 3);\n```\n\n> Unreal\n\n```typescript\nimport * as UE from 'ue'\nimport {argv} from 'puerts';\nlet world = argv.getByName(\"World\") as UE.World;\nlet actor = world.SpawnActor(UE.MainActor.StaticClass(),\n    undefined, UE.ESpawnActorCollisionHandlingMethod.Undefined, undefined, undefined) as UE.MainActor;\nconsole.log(actor.GetName());\nconsole.log(actor.K2_GetActorLocation().ToString());\n```\n\n## Manual | 参考文档\n\n> Unreal\n* [Unreal Readme](unreal/README.md)\n* [Unreal Manual](doc/unreal/manual.md)\n* [Unreal debugging](doc/unreal/vscode_debug.md)\n* [TypeScript and unreal engine interaction](unreal/interact_with_uclass.md)\n* [Template-based static binding](unreal/template_binding.md)\n> Unity\n* [Unity Readme](unity/README.md)\n* [Unity Manual](doc/unity/manual.md)\n* [Unity debugging](doc/unity/vscode_debug.md)\n* [More Framework for Unity](https://github.com/chexiongsheng/puerts_unity_demo#more-example--%E6%9B%B4%E5%A4%9A%E7%9A%84%E7%A4%BA%E4%BE%8B%E6%88%96%E8%80%85%E6%95%99%E7%A8%8B)\n\n## Sample Projects | 示例项目\n\n> Unreal\n\n* [QuickStart.ts](https://github.com/chexiongsheng/puerts_unreal_demo/blob/master/TsProj/QuickStart.ts) ： 演示TypeScript和UE4引擎互相调用\n\n* [NewContainer.ts](https://github.com/chexiongsheng/puerts_unreal_demo/blob/master/TsProj/NewContainer.ts) ： 演示容器的创建\n\n* [AsyncTest.ts](https://github.com/chexiongsheng/puerts_unreal_demo/blob/master/TsProj/AsyncTest.ts) ： 将异步加载蓝图，Delay封装成async/await\n\n* [UsingWidget.ts](https://github.com/chexiongsheng/puerts_unreal_demo/blob/master/TsProj/UsingWidget.ts) ： UI加载，绑定事件，获取数据的演示\n\n* [UsingMixin.ts](https://github.com/chexiongsheng/puerts_unreal_demo/blob/master/TsProj/UsingMixin.ts)：演示mixin功能的使用\n\n* [FPS demo](https://github.com/chexiongsheng/puerts_fps_demo) ： 以一个FPS游戏例子演示如何使用Puerts的“继承引擎类功能”，该功能的介绍见[unreal手册](doc/unreal/manual.md)\n\n> Unity\n\n* [Basic_Demo](https://github.com/chexiongsheng/puerts_unity_demo/tree/master/projects/0_Basic_Demo)\n\n  * [01_JsCallCs](https://github.com/chexiongsheng/puerts_unity_demo/tree/master/projects/0_Basic_Demo/Assets/Examples/01_JsCallCs) ： js调用c#\n\n  * [02_Require](https://github.com/chexiongsheng/puerts_unity_demo/tree/master/projects/0_Basic_Demo/Assets/Examples/02_Require) ： 加载js文件\n\n  * [03_Callback](https://github.com/chexiongsheng/puerts_unity_demo/tree/master/projects/0_Basic_Demo/Assets/Examples/03_Callback) ： 回调基本演示\n\n  * [04_JsBehaviour](https://github.com/chexiongsheng/puerts_unity_demo/tree/master/projects/0_Basic_Demo/Assets/Examples/04_JsBehaviour) ： 用js模拟MonoBehaviour\n\n  * [05_Typescript](https://github.com/chexiongsheng/puerts_unity_demo/tree/master/projects/0_Basic_Demo/Assets/Examples/05_Typescript) ： 包含了大部分TypeScript和C#互相调用的演示\n\n  * [06_UIEvent](https://github.com/chexiongsheng/puerts_unity_demo/tree/master/projects/0_Basic_Demo/Assets/Examples/06_UIEvent) ：UI事件的演示\n\n* [Start_Template](https://github.com/chexiongsheng/puerts_unity_demo/tree/master/projects/1_Start_Template)\n\n## FAQ | 常见问题\n\n* [general faq](doc/faq.md)\n* [unreal faq](doc/unreal/faq.md)\n* [unity faq](doc/unity/faq.md)\n\n---\n\n## Avaliable on these Engine | 引擎\n\n* unreal engine 4.22 ~ latest\n\n* unity 5 ~ latest\n\n## Available on these Platform | 平台\n\n* iOS，Android，Windows，Macos\n\n* 任意.net环境 | Any .net project\n\n\n## Ask for help | 技术支持\n\n[Github Discussion](https://github.com/Tencent/puerts/discussions)\n\nQQ群：942696334\n\nUE4专属群：689643903\n\n## 开发博客\n[知乎专栏](https://www.zhihu.com/column/c_1355534112468402176)\n","lang":"en","doc":"readme"},"__N_SSG":true}